diff --git a/node_modules/@noble/secp256k1/lib/esm/index.js b/node_modules/@noble/secp256k1/lib/esm/index.js
index ff76464..23dec1b 100644
--- a/node_modules/@noble/secp256k1/lib/esm/index.js
+++ b/node_modules/@noble/secp256k1/lib/esm/index.js
@@ -1082,12 +1082,13 @@ export const utils = {
         if (crypto.web) {
             return crypto.web.getRandomValues(new Uint8Array(bytesLength));
         }
-        else if (crypto.node) {
-            const { randomBytes } = crypto.node;
-            return Uint8Array.from(randomBytes(bytesLength));
-        }
         else {
-            throw new Error("The environment doesn't have randomBytes function");
+            try {
+                const randomBytes = require('expo-random').getRandomBytes;
+                return randomBytes(bytesLength);
+            } catch (e) {
+                throw new Error("The environment doesn't have randomBytes function and we couldn't use expo-random");
+            }
         }
     },
     randomPrivateKey: () => {
diff --git a/node_modules/@noble/secp256k1/lib/index.js b/node_modules/@noble/secp256k1/lib/index.js
index e207e74..da07368 100644
--- a/node_modules/@noble/secp256k1/lib/index.js
+++ b/node_modules/@noble/secp256k1/lib/index.js
@@ -1092,12 +1092,13 @@ exports.utils = {
         if (crypto.web) {
             return crypto.web.getRandomValues(new Uint8Array(bytesLength));
         }
-        else if (crypto.node) {
-            const { randomBytes } = crypto.node;
-            return Uint8Array.from(randomBytes(bytesLength));
-        }
         else {
-            throw new Error("The environment doesn't have randomBytes function");
+            try {
+                const randomBytes = require('expo-random').getRandomBytes;
+                return randomBytes(bytesLength);
+            } catch (e) {
+                throw new Error("The environment doesn't have randomBytes function and we couldn't use expo-random");
+            }
         }
     },
     randomPrivateKey: () => {
